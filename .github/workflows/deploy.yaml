name: Continuous Deployment Pipeline

on:
    push:
        branches:
            - "main"
        paths-ignore:
            - "**.md"
            - "LICENSE"
            - "LICENSE.txt"
            - ".gitignore"

jobs:
    dockerhub:
        name: Publish Docker Image(s) to Dockerhub
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Cache Docker layers for Odins' Vault
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache-odins-vault
                  key: ${{ runner.os }}-buildx-odins-vault-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-odins-vault-

            - name: Build & Push Odins' Vault
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/odins-vault:latest
                  cache-from: type=local,src=/tmp/.buildx-cache-odins-vault
                  cache-to: type=local,dest=/tmp/.buildx-cache-odins-vault-new,mode=max

            - name: Move Odins' Vault cache
              run: |
                  rm -rf /tmp/.buildx-cache-odins-vault
                  mv /tmp/.buildx-cache-odins-vault-new /tmp/.buildx-cache-odins-vault

    push:
        name: Push Code Stage
        needs: dockerhub
        runs-on: ubuntu-latest

        steps:
            - name: Sync local repo with remote repo
              uses: appleboy/ssh-action@master
              env:
                  PROJECT_DIR: ${{ secrets.PROJECT_DIR }}
              with:
                  host: ${{ secrets.SSH_HOSTNAME }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
                  envs: PROJECT_DIR
                  script_stop: true
                  script: |
                      cd "${PROJECT_DIR}/"
                      sudo git fetch origin
                      sudo git reset --hard origin/main

    pull:
        name: Pull Image Stage
        needs: push
        runs-on: ubuntu-latest

        steps:
            - name: Pull the latest images(s)
              uses: appleboy/ssh-action@master
              env:
                  PROJECT_DIR: ${{ secrets.PROJECT_DIR }}
              with:
                  host: ${{ secrets.SSH_HOSTNAME }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
                  envs: PROJECT_DIR
                  script_stop: true
                  script: |
                      cd "${PROJECT_DIR}/"
                      sudo docker compose pull

    deploy:
        name: Deploy Stage
        needs: pull
        runs-on: ubuntu-latest

        steps:
            - name: Deploy the latest build(s)
              uses: appleboy/ssh-action@master
              env:
                  PROJECT_DIR: ${{ secrets.PROJECT_DIR }}
              with:
                  host: ${{ secrets.SSH_HOSTNAME }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
                  envs: PROJECT_DIR
                  script_stop: true
                  script: |
                      cd "${PROJECT_DIR}/"
                      sudo docker compose down
                      sudo docker compose up -d
